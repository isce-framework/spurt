[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "spurt"
description = "Spatial and Temporal phase Unwrapping for InSAR time-series"
readme = "README.md"
keywords = [
  "insar",
  "phase-unwrapping",
  "radar",
  "remote-sensing",
  "sar",
  "synthetic-aperture-radar",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering",
]
requires-python = ">=3.9"
dependencies = [
  "h5py>=3.6",
  "numpy>=1.23",
  "ortools==9.8.3296",
  "rasterio>=1.2",
  "scipy>=1.12",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
  "pytest>=6",
  "pytest-cov>=3"
]
docs = [
  "mkdocs",
  "mkdocs-gen-files",
  "mkdocs-jupyter",
  "mkdocs-literate-nav",
  "mkdocs-material",
  "mkdocs-section-index",
  "mkdocs-mermaid2-plugin",
  "mkdocstrings[python]",
  "pybtex", # for mdx_bib
  "pymdown-extensions",
]

[project.urls]
Discussions = "https://github.com/isce-framework/spurt/discussions"
Homepage = "https://github.com/isce-framework/spurt"
Issues = "https://github.com/isce-framework/spurt/issues"

# Entry points for the command line interface
[project.scripts]
spurt-emcf = "spurt.workflows.emcf:__main__"

[tool.black]
preview = true

[tool.mypy]
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
strict = false

[[tool.mypy.overrides]]
module = "test.*"
disable_error_code = ["misc", "no-untyped-def"]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--showlocals",
  "--strict-markers",
  "--strict-config",
  "--cov=spurt",
]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["test"]

[tool.ruff.lint]
select = [
  "A",   # flake8-builtins
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle (errors)
  "W",   # pycodestyle (warnings)
  "EM",  # flake8-errmsg
  "EXE", # flake8-executable
  "F",   # Pyflakes
  "FBT", # flake8-boolean-trap
  "I",   # isort
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # Pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RET", # flake8-return
  "RUF", # Ruff-specific rules
  "SIM", # flake8-simplify
  "SLF", # flake8-self
  "TRY", # tryceratops
  "UP",  # pyupgrade
  "YTT", # flake8-2020
]
ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "PLR",  # Pylint Refactor
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]
"test/**" = ["D"]
"docs/mdx_bib.py" = ["ALL"] # ignore the vendored code


[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["spurt"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools_scm]
write_to = "src/spurt/_version.py"
local_scheme = "no-local-version"
